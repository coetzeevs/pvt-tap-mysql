name: Test tap-myqsql

on:
  push:
    branches: [main]
    paths:
    - tap_mysql/**
    - tests/**
    - poetry.lock
    - pyproject.toml
    - .github/workflows/test.yml
  pull_request:
    branches: [main]
    paths:
    - tap_mysql/**
    - tests/**
    - poetry.lock
    - pyproject.toml
    - .github/workflows/test.yml
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Run docker compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./docker-compose.yml"
        compose-project-name: "tap-mysql-test-${{ matrix.python-version }}-${{ github.run_id }}"

    - name: Wait for MySQL to be ready
      run: |
        wget -O wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
        chmod +x wait-for-it.sh
        ./wait-for-it.sh -t 30 127.0.0.1:3306 -- echo "MySQL is ready"

    - name: Install Poetry
      run: |
        pipx install poetry
        pipx ensurepath
        source ~/.profile
        poetry --version

    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "poetry"

    - name: Cache Poetry dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-root

    - name: Run pytest
      run: |
        poetry run pytest

    - name: Run lint
      run: |
        poetry run tox -e typing
